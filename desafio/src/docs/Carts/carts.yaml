openapi: "3.0.1"
info:
  version: "1.0.0"
  title: "Documentacion api Backend Coder"
  description: "Definicion de endpoints para la API de Coder"
  
paths:
  /api/dbcarts:
    get:
      summary: Obtener todos los carritos
      tags:
        - Carritos
      responses:
        "200":
          description: Carritos obtenidos correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        "500":
          description: Error interno del servidor

    post:
      summary: Crear un nuevo carrito
      tags:
        - Carritos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      responses:
        "200":
          description: Carrito creado exitosamente
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Error interno del servidor

  /api/dbcarts/{cartId}:
    get:
      summary: Obtener un carrito por su ID
      tags:
        - Carritos
      parameters:
        - in: path
          name: cartId
          required: true
          description: ID del carrito a obtener.
          schema:
            type: number
      responses:
        "200":
          description: Carrito obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        "404":
          description: Carrito no encontrado
        "500":
          description: Error interno del servidor

    put:
      summary: Actualizar un carrito existente
      tags:
        - Carritos
      parameters:
        - in: path
          name: cartId
          required: true
          description: ID del carrito a actualizar.
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      responses:
        "200":
          description: Carrito actualizado correctamente
          content:
            application/json:
              schema:
                type: object
        "404":
          description: Carrito no encontrado
        "500":
          description: Error interno del servidor

    delete:
      summary: Eliminar un carrito por su ID
      tags:
        - Carritos
      parameters:
        - in: path
          name: cartId
          required: true
          description: ID del carrito a eliminar.
          schema:
            type: number
      responses:
        "204":
          description: Carrito eliminado correctamente
        "404":
          description: Carrito no encontrado
        "500":
          description: Error interno del servidor

  /api/dbcarts/{cartId}/products:
    post:
      summary: Agregar un producto a un carrito
      tags:
        - Carritos
      parameters:
        - in: path
          name: cartId
          required: true
          description: ID del carrito al que se agregará el producto.
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: number
                  description: ID del producto a agregar al carrito.
                quantity:
                  type: number
                  description: Cantidad del producto a agregar al carrito.
      responses:
        "200":
          description: Producto agregado al carrito correctamente
          content:
            application/json:
              schema:
                type: object
        "404":
          description: Carrito no encontrado
        "500":
          description: Error interno del servidor

  /api/dbcarts/{cartId}/products/{productId}:
    delete:
      summary: Eliminar un producto de un carrito
      tags:
        - Carritos
      parameters:
        - in: path
          name: cartId
          required: true
          description: ID del carrito del que se eliminará el producto.
          schema:
            type: number
        - in: path
          name: productId
          required: true
          description: ID del producto a eliminar del carrito.
          schema:
            type: number
      responses:
        "204":
          description: Producto eliminado del carrito correctamente
        "404":
          description: Carrito o producto no encontrado
        "500":
          description: Error interno del servidor

    put:
      summary: Actualizar la cantidad de un producto en un carrito
      tags:
        - Carritos
      parameters:
        - in: path
          name: cartId
          required: true
          description: ID del carrito al que pertenece el producto.
          schema:
            type: number
        - in: path
          name: productId
          required: true
          description: ID del producto cuya cantidad se actualizará en el carrito.
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: number
                  description: Nueva cantidad del producto en el carrito.
      responses:
        "200":
          description: Cantidad del producto actualizada en el carrito correctamente
          content:
            application/json:
              schema:
                type: object
        "404":
          description: Carrito o producto no encontrado
        "500":
          description: Error interno del servidor

    delete:
      summary: Eliminar todos los productos de un carrito
      tags:
        - Carritos
      parameters:
        - in: path
          name: cartId
          required: true
          description: ID del carrito del que se eliminarán todos los productos.
          schema:
            type: number
      responses:
        "204":
          description: Todos los productos eliminados del carrito correctamente
        "404":
          description: Carrito no encontrado
        "500":
          description: Error interno del servidor

  /api/dbcarts/{cartId}/purchase:
    post:
      summary: Realizar una compra desde un carrito
      tags:
        - Carritos
      parameters:
        - in: path
          name: cartId
          required: true
          description: ID del carrito desde el que se realizará la compra.
          schema:
            type: number
      responses:
        "200":
          description: Compra realizada correctamente
          content:
            application/json:
              schema:
                type: object
        "404":
          description: Carrito no encontrado
        "500":
          description: Error interno del servidor

components:
  schemas:
    Cart:
      type: object
      properties:
        id:
          type: string
          description: "El identificador único del carrito."
          example: "609bed45c25c133b7c6b26a1"
        products:
          type: array
          description: "Lista de productos en el carrito."
          items:
            type: object
            properties:
              product:
                type: string
                description: "El identificador único del producto."
                example: "609bed45c25c133b7c6b26a2"
              quantity:
                type: integer
                description: "La cantidad del producto en el carrito."
                example: 2
      required:
        - id
        - products
