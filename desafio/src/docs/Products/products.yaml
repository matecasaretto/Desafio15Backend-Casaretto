openapi: "3.0.1"
info:
  version: "1.0.0"
  title: "Documentacion api Backend Coder"
  description: "Definicion de endpoints para la API de Coder"
  
paths:
  /api/dbproducts:
    get:
      summary: Obtener todos los productos
      tags:
        - Productos
      responses:
        "200":
          description: Productos obtenidos correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        "500":
          description: Error interno del servidor

    post:
      summary: Crear un nuevo producto
      tags:
        - Productos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        "200":
          description: Producto creado exitosamente
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Error interno del servidor

  /api/dbproducts/{productId}:
    get:
      summary: Obtener un producto por su ID
      tags:
        - Productos
      parameters:
        - in: path
          name: productId
          required: true
          description: ID del producto a obtener.
          schema:
            type: number
      responses:
        "200":
          description: Producto obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "404":
          description: Producto no encontrado
        "500":
          description: Error interno del servidor

    put:
      summary: Actualizar un producto existente
      tags:
        - Productos
      parameters:
        - in: path
          name: productId
          required: true
          description: ID del producto a actualizar.
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        "200":
          description: Producto actualizado correctamente
          content:
            application/json:
              schema:
                type: object
        "404":
          description: Producto no encontrado
        "500":
          description: Error interno del servidor

    delete:
      summary: Eliminar un producto por su ID
      tags:
        - Productos
      parameters:
        - in: path
          name: productId
          required: true
          description: ID del producto a eliminar.
          schema:
            type: number
      responses:
        "204":
          description: Producto eliminado correctamente
        "404":
          description: Producto no encontrado
        "500":
          description: Error interno del servidor

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: number
          description: "El identificador único del producto."
        title:
          type: string
          description: "El título o nombre del producto."
        description:
          type: string
          description: "La descripción del producto."
        price:
          type: number
          description: "El precio del producto."
        thumbnail:
          type: string
          description: "La URL de la imagen en miniatura del producto."
        code:
          type: number
          description: "El código del producto."
        stock:
          type: number
          description: "La cantidad en stock del producto."
        status:
          type: boolean
          description: "El estado del producto (activo/inactivo)."
        category:
          type: string
          description: "La categoría a la que pertenece el producto."
        owner:
          type: string
          description: "El propietario del producto."
